config:
  #target: 'https://scc24-backend.azurewebsites.net/rest'
  target: 'https://scc24appbrazilsouth1.azurewebsites.net/rest'
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils-v2.js"
  phases:
  # - name: "Warm up"
  #   duration: 10
  #   arrivalCount: 2
  - name: "Warm up"    
    duration: 20
    arrivalCount: 10
  - name: "Experiment"    
    duration: 60
    arrivalRate: 2

    # duration: 20
    # arrivalCount: 10
  # - name: "Experiment"   
  #   duration: 60
  #   arrivalRate: 2               # set this value as high as possible for avoiding timeouts

scenarios:
  - name: 'Admin user checks random user houses list'
    flow:
      - function: "genNewUser"
      - post:
          url: "/user/createadmin"
          headers:
            Content-Type: application/json
            Accept: application/json
          json:
            nickName: "{{ nickname }}"
            name: "{{ name }}"
            email: "{{ email }}"
            hashedPassword: "{{ pwd }}"
          afterResponse: "genNewUserReply"
      - post:
          url: "/user/auth"
          headers:
            Content-Type: application/json
          json:
            username: "{{ nickname }}"
            password: "{{ pwd }}"
      - get:
          url: "/user/getAll"
          headers:
            Accepts: application/json
          # capture: 
          #   json: '$'
          #   as: 'userLst'
          afterResponse: "storeUserList"

      - function: "selectUserSkewed"
      - get:
          url: "/user/{{ skewedUserid }}"
          name: "GET:user/{userid}"
          headers:
            Accepts: application/json
          # capture: 
          #   json: '$'
          #   as: 'userLst'
      - get:
          url: "/house/owner/{{ skewedUserid }}"
          name: "GET:house/owner/{userid}"
          headers:
            Accepts: application/json
          afterResponse: "storeUserHousesList"
  - name: "Get available houses in random location"
    weight: 5
    flow:
      - function: "getRandomLocation"
      - get:
          url: "/house/location/available/{{ location }}"
          name: "GET:house/location/available/{location}"
          headers:
            Accepts: application/json
  - name: "Get all houses of a given location"
    weight: 5
    flow:
      - function: "getRandomLocation"
      - get:
          url: "/house/location/{{ location }}"
          name: "GET:house/location/{location}"
          headers:
            Accepts: application/json
  - name: "Login as a user and update a rental"
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:
          url: "/user/auth"
          headers:
            Content-Type: application/json
          json:
            username: "{{ skewedLoggedName }}"
            password: "{{ skewedLoggedPassword }}"
      - function: "selectRandomHouseUserSkewed"
      - get:
          url: "/house/{{ randomUserHouse }}/rental/owner/allRentals"
          name: "GET:/house/{houseId}/rental/owner/allRentals"
          headers:
            Content-Type: application/json
          afterResponse: "storeRandomUserRentals"
      - function: "selectRandomRentalHouseSkewed"
      - function: "getRandomLocation"
      - put:
          url: "/house/{{ randomUserHouse }}/rental/update"
          name: "PUT:/house/{houseId}/rental/update"
          headers:
            Content-Type: application/json
            Accepts: application/json
          json:
            id: "{{ randomUserRental.id }}"
            ownerId: "{{ randomUserRental.ownerId }}"
            houseId: "{{ randomUserRental.houseId }}"
            userRentingId: "{{ randomUserRental.userRentingId }}"
            rentingDate: "{{ randomUserRental.rentingDate }}"
            location: "{{ location }}"
            price: "{{ cost }}"
            discount: "{{ randomUserRental.discount }}"
  - name: "question activity"
    weight: 5
    flow:
      - function: "selectUserSkewed"
      - post:
          url: "/user/auth"
          headers:
            Content-Type: application/json
          json:
            username: "{{ skewedLoggedName }}"
            password: "{{ skewedLoggedPassword }}"
      - function: "selectRandomHouse"
      - post:
          url: "/{{ randomUserHouse }}/question"
          name: "POST:/{houseId}/question"
          headers:
            Content-Type: application/json
            Accepts: application/json
          json:
            userid: "{{ skewedUserid }}"
            text: "{{ randText }}"
            question: "question"
            repliedId: null
      - get:
          url: "/question/{{ randomUserHouse }}/qOnly"
          name: "GET:/question/{houseId}/qOnly"
          headers:
            Accepts: application/json

      

      

      
          
      

        


  
      

      # - function: "genNewUser"
      # - post:
      #     url: "/user/create"
      #     headers:
      #       Content-Type: application/json
      #       Accept: application/json
      #     json:
      #       nickName: "{{ userid }}"
      #       name: "{{ name }}"
      #       email: "{{ email }}"
      #       hashedPassword: "{{ pwd }}"
      #       # photoId: "{{ imageId }}"
      #       # houseIds: []
      #     afterResponse: "genNewUserReply"


      # - function: "selectUserSkewed"
      # - post:                          # First: login as a user
      #     url: "/user/auth"
      #     name: "POST:/user/auth"
      #     headers:
      #       Content-Type: application/json
      #     json:
      #       username: "{{ loggedName }}"
      #       password: "{{ loggedPassword }}"
      # - function: "getRandomUser"
      # - get:                          # Get houses for the random user
      #     url: "/house/owner/{{ userid }}"
      #     name: "GET:/owner/{userid}"
      #     headers:
      #       Accept: application/json
          # capture: 
          #   json: "$"
          #   as: "housesLst"
      # - set:
      #     # Use JavaScript to pick a random index
      #     - randomIndex: 'Math.floor(Math.random() * context.vars.housesLst.length)'

      # - set:
      #     # Use the randomly picked index to select a house
      #     - randomHouse: 'context.vars.housesLst[context.vars.randomIndex]'

      # - get:                         #Get all rental periods made for this house
      #     url: "/house/{{ randomHouse.id }}/rental/owner/allRentals"
      #     name: "GET:/house/{{ randomHouse.id }}/rental/owner/allRentals"
      #     headers:
      #       Accept: application/json

      # - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
      #     url: "/user/{{ user }}/houses?st=0&len=20"
      #     name: "GET:/user/*/houses"
      #     headers:
      #       Accept: application/json
      #     capture: 
      #       json: "$"
      #       as: "housesLst"
      # - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
      #     url: "/house?discount=1&st=0&len=20"
      #     name: "GET:/house/discount"
      #     headers:
      #       Accept: application/json
      #     capture: 
      #       json: "$"
      #       as: "housesDiscountLst"
      # - loop:                                   # Check houses for their rentals
      #   - get:                          
      #       url: "/house/{{ $loopElement.house }}"
      #       name: "GET:/house/*"
      #       headers:
      #         Accept: application/json
      #   over: "rentalsLst"

  # - name: 'User creates rental periods for their house'
  #   weight: 5
  #   flow:
  #     - function: "selectUserSkewed"
  #     - post:                          # First: login as a user
  #         url: "/user/auth"
  #         name: "POST:/user/auth"
  #         headers:
  #           Content-Type: application/json
  #         json:
  #           username: "{{ loggedName }}"
  #           password: "{{ loggedPassword }}"
  #     - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
  #         url: "/house/{{  }}/rentals?st=0&len=20"
  #         name: "GET:/user/*/rentals"
  #         headers:
  #           Accept: application/json
  #         capture: 
  #           json: "$"
  #           as: "rentalsLst"
  #     - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
  #         url: "/user/{{ user }}/houses?st=0&len=20"
  #         name: "GET:/user/*/houses"
  #         headers:
  #           Accept: application/json
  #         capture: 
  #           json: "$"
  #           as: "housesLst"
  #     - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
  #         url: "/house?discount=1&st=0&len=20"
  #         name: "GET:/house/discount"
  #         headers:
  #           Accept: application/json
  #         capture: 
  #           json: "$"
  #           as: "housesDiscountLst"
  #     - loop:
  #       - get:                                   # Check houses for their rentals                          
  #           url: "/house/{{ $loopElement.id }}/rental?st=0&len=20"
  #           name: "GET:/house/*/rental"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "houseRentalsLst"
  #       - get:                                   # Get unanswered questions
  #           url: "/house/{{ $loopElement.id }}/question?noanswer=true&st=0&len=20"
  #           name: "GET:/house/*/question"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "questionLst"
  #           ifTrue: "houseId"
  #       - function: "selectQuestion"
  #       - put:                                   # Answer one question                          
  #           url: "/house/{{ houseId }}/question/{{ questionId }}/reply"
  #           name: "PUT:/house/*/question/*/reply"
  #           headers:
  #             Accept: application/json
  #             Content-Type: application/json
  #           json:
  #             reply: "{{ reply }}"
  #           ifTrue: "houseId and questionId"
  #       over: "housesLst"

  # - name: 'Mixed browsing'
  #   weight: 40
  #   flow:
  #     - function: "selectUser"
  #     - post:                          # First: login as a user
  #         url: "/user/auth"
  #         name: "POST:/user/auth"
  #         headers:
  #           Content-Type: application/json
  #         json:
  #           user: "{{ user }}"
  #           pwd: "{{ pwd }}"
  #     - loop:                                  
  #       - get:                          # Get rentals for the user (assuming rentals + houses + discount initial page)
  #           url: "/user/{{ user }}/rentals?st=0&len=20"
  #           name: "GET:/user/*/rentals"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "rentalsLst"
  #       - get:                          # Get houses for the user (assuming rentals + houses + discount initial page)
  #           url: "/user/{{ user }}/houses?st=0&len=20"
  #           name: "GET:/user/*/houses"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "housesLst"
  #       - get:                          # Get generic discounted houses (assuming rentals + houses + discount initial page)
  #           url: "/house?discount=1&st=0&len=20"
  #           name: "GET:/house/discount"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "housesDiscountLst"
  #       - function: "decideNextAction"
  #       ################################# Search location
  #       - get:                          
  #           url: "/house?location={{ location }}&initDate={{ initDate }}$endDate={{ endDate }}&st=0&len=20"
  #           name: "GET:/house/*"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "housesLst"
  #           ifTrue: "nextAction == 1"
  #       - function: "selectHouse"
  #       ################################# Browse next page
  #       - get:                          
  #           url: "/house?discount=1&st=0&len=20"
  #           name: "GET:/house/discount"
  #           headers:
  #             Accept: application/json
  #           ifTrue: "afterNextAction == 0 and nextAction == 0"
  #       - get:                          
  #           url: "/house?location={{ location }}&initDate={{ initDate }}$endDate={{ endDate }}&st=20&len=20"
  #           name: "GET:/house/search"
  #           headers:
  #             Accept: application/json
  #           ifTrue: "afterNextAction == 0 and nextAction == 1"
  #       ################################# Check questions
  #       - get:                          
  #           url: "/house/{{ houseId }}/question?st=0&len=20"
  #           name: "GET:/house/*/question"
  #           headers:
  #             Accept: application/json
  #           ifTrue: "houseId and afterNextAction == 1"
  #       ################################# Post questions
  #       - post:                          
  #           url: "/house/{{ houseId }}/question"
  #           name: "POST:/house/*/question"
  #           headers:
  #             Accept: application/json
  #             Content-Type: application/json
  #           json:
  #             house: "{{ houseId }}"
  #             owner: "{{ owner }}"
  #             user: "{{ user }}"
  #             text: "{{ text }}"
  #           ifTrue: "houseId and afterNextAction == 2"
  #       ################################# Reserve house
  #       - get:                                           # get free slots for selected house
  #           url: "/house/{{ houseId }}/rental?free=true"   
  #           name: "GET:/house/*/rental"
  #           headers:
  #             Accept: application/json
  #           capture: 
  #             json: "$"
  #             as: "rentalLst"
  #           ifTrue: "houseId and afterNextAction == 3"
  #       - function: "selectRental"            
  #       - post:                                          # reserve selected house in selected slot
  #           url: "/house/{{ houseId }}/rental/{{ rentalId }}/renter"
  #           name: "POST:/house/*/rental/*/renter"
  #           headers:
  #             Accept: application/json
  #           json:
  #             renter: "{{ user }}"
  #           ifTrue: "rentalId and afterNextAction == 3"
  #       whileTrue: "random80"

